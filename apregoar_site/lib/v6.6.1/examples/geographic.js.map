{"version":3,"sources":["webpack:///./geographic.js"],"names":["const","place","point","map","target","view","center","zoom","layers","source","features","style","image","radius","fill","color","element","document","getElementById","popup","positioning","stopEvent","offset","formatCoordinate","coordinate","toFixed","addOverlay","info","on","getView","getCenter","innerHTML","event","feature","getFeaturesAtPixel","pixel","getGeometry","getCoordinates","setPosition","$","popover","container","parentElement","html","sanitize","content","placement","hasFeatureAtPixel","getViewport","cursor"],"mappings":"qNAOA,E,QAAA,MAEAA,IAAMC,EAAQ,EAAE,IAAK,IAEfC,EAAQ,IAAI,IAAMD,GAElBE,EAAM,IAAI,IAAI,CAClBC,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQL,EACRM,KAAM,IAERC,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,MAEd,IAAI,IAAY,CACdA,OAAQ,IAAI,IAAa,CACvBC,SAAU,CAAC,IAAI,IAAQR,MAEzBS,MAAO,IAAI,KAAM,CACfC,MAAO,IAAI,IAAO,CAChBC,OAAQ,EACRC,KAAM,IAAI,IAAK,CAACC,MAAO,iBAO3BC,EAAUC,SAASC,eAAe,SAElCC,EAAQ,IAAI,IAAQ,CACxBH,QAASA,EACTI,YAAa,gBACbC,WAAW,EACXC,OAAQ,CAAC,GAAI,MAIf,SAASC,EAAiBC,GACxB,MAAO,6DAGqBA,EAAW,GAAGC,QAAQ,GAAE,2CACxBD,EAAW,GAAGC,QAAQ,GAAE,2CAPtDtB,EAAIuB,WAAWP,GAYfnB,IAAM2B,EAAOV,SAASC,eAAe,QACrCf,EAAIyB,GAAG,WAAW,WAChB5B,IACMM,EADOH,EAAI0B,UACGC,YACpBH,EAAKI,UAAYR,EAAiBjB,MAGpCH,EAAIyB,GAAG,SAAS,SAAUI,GACxBhC,IAAMiC,EAAU9B,EAAI+B,mBAAmBF,EAAMG,OAAO,GACpD,GAAIF,EAAS,CACXjC,IAAMwB,EAAaS,EAAQG,cAAcC,iBACzClB,EAAMmB,YAAYd,GAClBe,EAAEvB,GAASwB,QAAQ,CACjBC,UAAWzB,EAAQ0B,cACnBC,MAAM,EACNC,UAAU,EACVC,QAAStB,EAAiBC,GAC1BsB,UAAW,QAEbP,EAAEvB,GAASwB,QAAQ,aAEnBD,EAAEvB,GAASwB,QAAQ,cAIvBrC,EAAIyB,GAAG,eAAe,SAAUI,GAC1B7B,EAAI4C,kBAAkBf,EAAMG,OAC9BhC,EAAI6C,cAAcrC,MAAMsC,OAAS,UAEjC9C,EAAI6C,cAAcrC,MAAMsC,OAAS,e","file":"geographic.js","sourcesContent":["import {Circle, Fill, Style} from '../src/ol/style.js';\nimport {Feature, Map, Overlay, View} from '../src/ol/index.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Point} from '../src/ol/geom.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {useGeographic} from '../src/ol/proj.js';\n\nuseGeographic();\n\nconst place = [-110, 45];\n\nconst point = new Point(place);\n\nconst map = new Map({\n  target: 'map',\n  view: new View({\n    center: place,\n    zoom: 8,\n  }),\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        features: [new Feature(point)],\n      }),\n      style: new Style({\n        image: new Circle({\n          radius: 9,\n          fill: new Fill({color: 'red'}),\n        }),\n      }),\n    }),\n  ],\n});\n\nconst element = document.getElementById('popup');\n\nconst popup = new Overlay({\n  element: element,\n  positioning: 'bottom-center',\n  stopEvent: false,\n  offset: [0, -10],\n});\nmap.addOverlay(popup);\n\nfunction formatCoordinate(coordinate) {\n  return `\n    <table>\n      <tbody>\n        <tr><th>lon</th><td>${coordinate[0].toFixed(2)}</td></tr>\n        <tr><th>lat</th><td>${coordinate[1].toFixed(2)}</td></tr>\n      </tbody>\n    </table>`;\n}\n\nconst info = document.getElementById('info');\nmap.on('moveend', function () {\n  const view = map.getView();\n  const center = view.getCenter();\n  info.innerHTML = formatCoordinate(center);\n});\n\nmap.on('click', function (event) {\n  const feature = map.getFeaturesAtPixel(event.pixel)[0];\n  if (feature) {\n    const coordinate = feature.getGeometry().getCoordinates();\n    popup.setPosition(coordinate);\n    $(element).popover({\n      container: element.parentElement,\n      html: true,\n      sanitize: false,\n      content: formatCoordinate(coordinate),\n      placement: 'top',\n    });\n    $(element).popover('show');\n  } else {\n    $(element).popover('dispose');\n  }\n});\n\nmap.on('pointermove', function (event) {\n  if (map.hasFeatureAtPixel(event.pixel)) {\n    map.getViewport().style.cursor = 'pointer';\n  } else {\n    map.getViewport().style.cursor = 'inherit';\n  }\n});\n"],"sourceRoot":""}