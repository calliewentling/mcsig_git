{"version":3,"sources":["webpack:///./immediate-geographic.js"],"names":["const","layer","source","map","layers","target","view","center","zoom","image","radius","fill","color","style","n","geometries","Array","i","lon","Math","random","lat","on","event","vectorContext","importance","pow","setOpacity","setScale","setStyle","drawGeometry","push","shift","render"],"mappings":"kMASA,E,QAAA,MA6BA,IA3BAA,IAAMC,EAAQ,IAAI,IAAU,CAC1BC,OAAQ,IAAI,IAAO,CACjBD,MAAO,YAILE,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACH,GACTI,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAQ,IAAI,IAAO,CACvBC,OAAQ,EACRC,KAAM,IAAI,IAAK,CAACC,MAAO,uBAGnBC,EAAQ,IAAI,KAAM,CACtBJ,MAAOA,IAGHK,EAAI,IACJC,EAAa,IAAIC,MAAMF,GAEpBG,EAAI,EAAGA,EAAIH,IAAKG,EAAG,CAC1BjB,IAAMkB,EAAM,IAAMC,KAAKC,SAAW,IAC5BC,EAAM,IAAMF,KAAKC,SAAW,GAClCL,EAAWE,GAAK,IAAI,IAAM,CAACC,EAAKG,IAGlCpB,EAAMqB,GAAG,cAAc,SAAUC,GAG/B,IAFAvB,IAAMwB,GAAgB,QAAiBD,GAE9BN,EAAI,EAAGA,EAAIH,IAAKG,EAAG,CAC1BjB,IAAMyB,GAAa,QAAUN,KAAKO,KAAKZ,EAAIG,GAAKH,EAAG,MAC/CW,EAAa,KAGjBhB,EAAMkB,WAAWF,GACjBhB,EAAMmB,SAASH,GACfD,EAAcK,SAAShB,GACvBW,EAAcM,aAAaf,EAAWE,KAGxCjB,IAAMkB,EAAM,IAAMC,KAAKC,SAAW,IAC5BC,EAAM,IAAMF,KAAKC,SAAW,GAClCL,EAAWgB,KAAK,IAAI,IAAM,CAACb,EAAKG,KAChCN,EAAWiB,QACX7B,EAAI8B,c","file":"immediate-geographic.js","sourcesContent":["import Stamen from '../src/ol/source/Stamen.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {Circle, Fill, Style} from '../src/ol/style.js';\nimport {Map, View} from '../src/ol/index.js';\nimport {Point} from '../src/ol/geom.js';\nimport {getVectorContext} from '../src/ol/render.js';\nimport {upAndDown} from '../src/ol/easing.js';\nimport {useGeographic} from '../src/ol/proj.js';\n\nuseGeographic();\n\nconst layer = new TileLayer({\n  source: new Stamen({\n    layer: 'toner',\n  }),\n});\n\nconst map = new Map({\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst image = new Circle({\n  radius: 8,\n  fill: new Fill({color: 'rgb(255, 153, 0)'}),\n});\n\nconst style = new Style({\n  image: image,\n});\n\nconst n = 1000;\nconst geometries = new Array(n);\n\nfor (let i = 0; i < n; ++i) {\n  const lon = 360 * Math.random() - 180;\n  const lat = 180 * Math.random() - 90;\n  geometries[i] = new Point([lon, lat]);\n}\n\nlayer.on('postrender', function (event) {\n  const vectorContext = getVectorContext(event);\n\n  for (let i = 0; i < n; ++i) {\n    const importance = upAndDown(Math.pow((n - i) / n, 0.15));\n    if (importance < 0.1) {\n      continue;\n    }\n    image.setOpacity(importance);\n    image.setScale(importance);\n    vectorContext.setStyle(style);\n    vectorContext.drawGeometry(geometries[i]);\n  }\n\n  const lon = 360 * Math.random() - 180;\n  const lat = 180 * Math.random() - 90;\n  geometries.push(new Point([lon, lat]));\n  geometries.shift();\n  map.render();\n});\n"],"sourceRoot":""}