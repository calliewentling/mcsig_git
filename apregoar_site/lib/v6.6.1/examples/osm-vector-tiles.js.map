{"version":3,"sources":["webpack:///./osm-vector-tiles.js"],"names":["roadStyleCache","roadColor","buildingStyle","fill","color","opacity","stroke","width","waterStyle","layers","source","attributions","format","layerName","maxZoom","url","style","feature","resolution","get","const","kind","railway","sort_key","styleKey","zIndex","roadStyle","target","view","center","zoom"],"mappings":"sLAUMA,EAAiB,GACjBC,EAAY,CAChB,WAAc,OACd,WAAc,OACd,QAAW,QAEPC,EAAgB,IAAI,KAAM,CAC9BC,KAAM,IAAI,IAAK,CACbC,MAAO,OACPC,QAAS,KAEXC,OAAQ,IAAI,IAAO,CACjBF,MAAO,OACPG,MAAO,MAGLC,EAAa,IAAI,KAAM,CAC3BL,KAAM,IAAI,IAAK,CACbC,MAAO,cA8BC,IAAI,IAAI,CAClBK,OAAQ,CACN,IAAI,IAAgB,CAClBC,OAAQ,IAAI,IAAiB,CAC3BC,aACE,8FAEFC,OAAQ,IAAI,IAAS,CACnBC,UAAW,QACXJ,OAAQ,CAAC,QAAS,QAAS,eAE7BK,QAAS,GACTC,IACE,uGAGJC,MAAO,SAAUC,EAASC,GACxB,OAAQD,EAAQE,IAAI,UAClB,IAAK,QACH,OAAOX,EACT,IAAK,QACH,OAhDM,SAAUS,GAC1BG,IAMMhB,EAAOG,EANPc,EAAOJ,EAAQE,IAAI,QACnBG,EAAUL,EAAQE,IAAI,WACtBI,EAAWN,EAAQE,IAAI,YACvBK,EAAWH,EAAO,IAAMC,EAAU,IAAMC,EAC1CP,EAAQhB,EAAewB,GAmB3B,OAlBKR,IAECM,GACFlB,EAAQ,OACRG,EAAQ,IAERH,EAAQH,EAAUoB,GAClBd,EAAgB,WAARc,EAAoB,IAAM,GAEpCL,EAAQ,IAAI,KAAM,CAChBV,OAAQ,IAAI,IAAO,CACjBF,MAAOA,EACPG,MAAOA,IAETkB,OAAQF,IAEVvB,EAAewB,GAAYR,GAEtBA,EAwBUU,CAAUT,GACnB,IAAK,YACH,OAAOC,EAAa,GAAKhB,EAAgB,KAC3C,QACE,OAAO,UAKjByB,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,QAAQ,QAAW,EAAE,QAAS,UAC9Bf,QAAS,GACTgB,KAAM,S","file":"osm-vector-tiles.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport TopoJSON from '../src/ol/format/TopoJSON.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Stroke, Style} from '../src/ol/style.js';\nimport {fromLonLat} from '../src/ol/proj.js';\n\nconst key = 'uZNs91nMR-muUTP99MyBSg';\n\nconst roadStyleCache = {};\nconst roadColor = {\n  'major_road': '#776',\n  'minor_road': '#ccb',\n  'highway': '#f39',\n};\nconst buildingStyle = new Style({\n  fill: new Fill({\n    color: '#666',\n    opacity: 0.4,\n  }),\n  stroke: new Stroke({\n    color: '#444',\n    width: 1,\n  }),\n});\nconst waterStyle = new Style({\n  fill: new Fill({\n    color: '#9db9e8',\n  }),\n});\nconst roadStyle = function (feature) {\n  const kind = feature.get('kind');\n  const railway = feature.get('railway');\n  const sort_key = feature.get('sort_key');\n  const styleKey = kind + '/' + railway + '/' + sort_key;\n  let style = roadStyleCache[styleKey];\n  if (!style) {\n    let color, width;\n    if (railway) {\n      color = '#7de';\n      width = 1;\n    } else {\n      color = roadColor[kind];\n      width = kind == 'highway' ? 1.5 : 1;\n    }\n    style = new Style({\n      stroke: new Stroke({\n        color: color,\n        width: width,\n      }),\n      zIndex: sort_key,\n    });\n    roadStyleCache[styleKey] = style;\n  }\n  return style;\n};\n\nconst map = new Map({\n  layers: [\n    new VectorTileLayer({\n      source: new VectorTileSource({\n        attributions:\n          '&copy; OpenStreetMap contributors, Whoâ€™s On First, ' +\n          'Natural Earth, and openstreetmapdata.com',\n        format: new TopoJSON({\n          layerName: 'layer',\n          layers: ['water', 'roads', 'buildings'],\n        }),\n        maxZoom: 19,\n        url:\n          'https://tile.nextzen.org/tilezen/vector/v1/all/{z}/{x}/{y}.topojson?api_key=' +\n          key,\n      }),\n      style: function (feature, resolution) {\n        switch (feature.get('layer')) {\n          case 'water':\n            return waterStyle;\n          case 'roads':\n            return roadStyle(feature);\n          case 'buildings':\n            return resolution < 10 ? buildingStyle : null;\n          default:\n            return null;\n        }\n      },\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([-74.0064, 40.7142]),\n    maxZoom: 19,\n    zoom: 15,\n  }),\n});\n"],"sourceRoot":""}