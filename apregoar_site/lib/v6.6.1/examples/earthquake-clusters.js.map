{"version":3,"sources":["webpack:///./earthquake-clusters.js"],"names":["maxFeatureCount","earthquakeFill","color","earthquakeStroke","width","textFill","textStroke","invisibleFill","createEarthquakeStyle","feature","const","name","get","radius","parseFloat","substr","geometry","getGeometry","image","radius1","radius2","points","angle","Math","PI","fill","stroke","let","currentResolution","vector","source","distance","url","format","extractStyles","style","resolution","features","getSource","getFeatures","i","length","jj","originalFeatures","extent","j","getExtent","max","set","calculateClusterInfo","size","min","text","toString","raster","layer","layers","interactions","extend","condition","evt","type","originalFeature","styles","push","target","view","center","zoom"],"mappings":"8FA0DIA,E,wKAvCEC,EAAiB,IAAI,IAAK,CAC9BC,MAAO,2BAEHC,EAAmB,IAAI,IAAO,CAClCD,MAAO,yBACPE,MAAO,IAEHC,EAAW,IAAI,IAAK,CACxBH,MAAO,SAEHI,EAAa,IAAI,IAAO,CAC5BJ,MAAO,qBACPE,MAAO,IAEHG,EAAgB,IAAI,IAAK,CAC7BL,MAAO,8BAGT,SAASM,EAAsBC,GAI7BC,IAAMC,EAAOF,EAAQG,IAAI,QAEnBC,EAAS,EAAI,IADDC,WAAWH,EAAKI,OAAO,IACJ,GAErC,OAAO,IAAI,KAAM,CACfC,SAAUP,EAAQQ,cAClBC,MAAO,IAAI,IAAa,CACtBC,QAASN,EACTO,QAAS,EACTC,OAAQ,EACRC,MAAOC,KAAKC,GACZC,KAAMxB,EACNyB,OAAQvB,MAMdwB,IAmBIC,EAnBAC,EAAS,KAkEbA,EAAS,IAAI,IAAY,CACvBC,OAAQ,IAAI,IAAQ,CAClBC,SAAU,GACVD,OAAQ,IAAI,IAAa,CACvBE,IAAK,qCACLC,OAAQ,IAAI,KAAI,CACdC,eAAe,QAIrBC,MAxDF,SAAuB1B,EAAS2B,GAC1BA,GAAcR,KApBS,SAAUQ,GACrCpC,EAAkB,EAGlB,IAFAU,IACID,EAASI,EADPwB,EAAWR,EAAOS,YAAYC,cAE3BC,EAAIH,EAASI,OAAS,EAAGD,GAAK,IAAKA,EAAG,CAE7C9B,IAEOgC,EAFDC,GADNlC,EAAU4B,EAASG,IACc5B,IAAI,YAC/BgC,GAAS,UACXC,OAAA,EACJ,IAAKA,EAAI,EAAGH,EAAKC,EAAiBF,OAAQI,EAAIH,IAAMG,GAClD,QAAOD,EAAQD,EAAiBE,GAAG5B,cAAc6B,aAEnD9C,EAAkBuB,KAAKwB,IAAI/C,EAAiB0C,GAC5C7B,EAAU,MAAQ,QAAS+B,IAAU,QAAUA,IAAYR,EAC3D3B,EAAQuC,IAAI,SAAUnC,IAOtBoC,CAAqBb,GACrBR,EAAoBQ,GAGtB1B,IAAMwC,EAAOzC,EAAQG,IAAI,YAAY6B,OAmBrC,OAlBIS,EAAO,EACD,IAAI,KAAM,CAChBhC,MAAO,IAAI,IAAY,CACrBL,OAAQJ,EAAQG,IAAI,UACpBa,KAAM,IAAI,IAAK,CACbvB,MAAO,CAAC,IAAK,IAAK,EAAGqB,KAAK4B,IAAI,GAAK,GAAMD,EAAOlD,QAGpDoD,KAAM,IAAI,IAAK,CACbA,KAAMF,EAAKG,WACX5B,KAAMpB,EACNqB,OAAQpB,MAKJE,EADgBC,EAAQG,IAAI,YAAY,OAqCpDF,IAAM4C,EAAS,IAAI,IAAU,CAC3BxB,OAAQ,IAAI,IAAO,CACjByB,MAAO,YAIC,IAAI,IAAI,CAClBC,OAAQ,CAACF,EAAQzB,GACjB4B,cAAc,UAAsBC,OAAO,CACzC,IAAI,IAAO,CACTC,UAAW,SAAUC,GACnB,MAAmB,eAAZA,EAAIC,MAAqC,eAAZD,EAAIC,MAE1C1B,MA5CN,SAA6B1B,GAW3B,IAVAC,IASIoD,EATEC,EAAS,CACb,IAAI,KAAM,CACR7C,MAAO,IAAI,IAAY,CACrBL,OAAQJ,EAAQG,IAAI,UACpBa,KAAMlB,OAINoC,EAAmBlC,EAAQG,IAAI,YAE5B4B,EAAIG,EAAiBF,OAAS,EAAGD,GAAK,IAAKA,EAClDsB,EAAkBnB,EAAiBH,GACnCuB,EAAOC,KAAKxD,EAAsBsD,IAEpC,OAAOC,OAgCPE,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,Q","file":"earthquake-clusters.js","sourcesContent":["import KML from '../src/ol/format/KML.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {\n  Circle as CircleStyle,\n  Fill,\n  RegularShape,\n  Stroke,\n  Style,\n  Text,\n} from '../src/ol/style.js';\nimport {Cluster, Stamen, Vector as VectorSource} from '../src/ol/source.js';\nimport {\n  Select,\n  defaults as defaultInteractions,\n} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {createEmpty, extend, getHeight, getWidth} from '../src/ol/extent.js';\n\nconst earthquakeFill = new Fill({\n  color: 'rgba(255, 153, 0, 0.8)',\n});\nconst earthquakeStroke = new Stroke({\n  color: 'rgba(255, 204, 0, 0.2)',\n  width: 1,\n});\nconst textFill = new Fill({\n  color: '#fff',\n});\nconst textStroke = new Stroke({\n  color: 'rgba(0, 0, 0, 0.6)',\n  width: 3,\n});\nconst invisibleFill = new Fill({\n  color: 'rgba(255, 255, 255, 0.01)',\n});\n\nfunction createEarthquakeStyle(feature) {\n  // 2012_Earthquakes_Mag5.kml stores the magnitude of each earthquake in a\n  // standards-violating <magnitude> tag in each Placemark.  We extract it\n  // from the Placemark's name instead.\n  const name = feature.get('name');\n  const magnitude = parseFloat(name.substr(2));\n  const radius = 5 + 20 * (magnitude - 5);\n\n  return new Style({\n    geometry: feature.getGeometry(),\n    image: new RegularShape({\n      radius1: radius,\n      radius2: 3,\n      points: 5,\n      angle: Math.PI,\n      fill: earthquakeFill,\n      stroke: earthquakeStroke,\n    }),\n  });\n}\n\nlet maxFeatureCount;\nlet vector = null;\nconst calculateClusterInfo = function (resolution) {\n  maxFeatureCount = 0;\n  const features = vector.getSource().getFeatures();\n  let feature, radius;\n  for (let i = features.length - 1; i >= 0; --i) {\n    feature = features[i];\n    const originalFeatures = feature.get('features');\n    const extent = createEmpty();\n    let j, jj;\n    for (j = 0, jj = originalFeatures.length; j < jj; ++j) {\n      extend(extent, originalFeatures[j].getGeometry().getExtent());\n    }\n    maxFeatureCount = Math.max(maxFeatureCount, jj);\n    radius = (0.25 * (getWidth(extent) + getHeight(extent))) / resolution;\n    feature.set('radius', radius);\n  }\n};\n\nlet currentResolution;\nfunction styleFunction(feature, resolution) {\n  if (resolution != currentResolution) {\n    calculateClusterInfo(resolution);\n    currentResolution = resolution;\n  }\n  let style;\n  const size = feature.get('features').length;\n  if (size > 1) {\n    style = new Style({\n      image: new CircleStyle({\n        radius: feature.get('radius'),\n        fill: new Fill({\n          color: [255, 153, 0, Math.min(0.8, 0.4 + size / maxFeatureCount)],\n        }),\n      }),\n      text: new Text({\n        text: size.toString(),\n        fill: textFill,\n        stroke: textStroke,\n      }),\n    });\n  } else {\n    const originalFeature = feature.get('features')[0];\n    style = createEarthquakeStyle(originalFeature);\n  }\n  return style;\n}\n\nfunction selectStyleFunction(feature) {\n  const styles = [\n    new Style({\n      image: new CircleStyle({\n        radius: feature.get('radius'),\n        fill: invisibleFill,\n      }),\n    }),\n  ];\n  const originalFeatures = feature.get('features');\n  let originalFeature;\n  for (let i = originalFeatures.length - 1; i >= 0; --i) {\n    originalFeature = originalFeatures[i];\n    styles.push(createEarthquakeStyle(originalFeature));\n  }\n  return styles;\n}\n\nvector = new VectorLayer({\n  source: new Cluster({\n    distance: 40,\n    source: new VectorSource({\n      url: 'data/kml/2012_Earthquakes_Mag5.kml',\n      format: new KML({\n        extractStyles: false,\n      }),\n    }),\n  }),\n  style: styleFunction,\n});\n\nconst raster = new TileLayer({\n  source: new Stamen({\n    layer: 'toner',\n  }),\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  interactions: defaultInteractions().extend([\n    new Select({\n      condition: function (evt) {\n        return evt.type == 'pointermove' || evt.type == 'singleclick';\n      },\n      style: selectStyleFunction,\n    }),\n  ]),\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n"],"sourceRoot":""}