{"version":3,"sources":["webpack:///./image-vector-layer.js"],"names":["highlight","style","fill","color","stroke","width","text","map","layers","imageRatio","source","url","format","feature","getText","setText","get","target","view","center","zoom","featureOverlay","displayFeatureInfo","pixel","getLayers","item","getFeatures","then","features","const","length","undefined","info","document","getElementById","innerHTML","getId","getSource","removeFeature","addFeature","on","evt","dragging"],"mappings":"8FAsDIA,E,kGA9CEC,EAAQ,IAAI,KAAM,CACtBC,KAAM,IAAI,IAAK,CACbC,MAAO,6BAETC,OAAQ,IAAI,IAAO,CACjBD,MAAO,UACPE,MAAO,IAETC,KAAM,IAAI,MAGNC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CACN,IAAI,IAAiB,CACnBC,WAAY,EACZC,OAAQ,IAAI,IAAa,CACvBC,IAAK,iCACLC,OAAQ,IAAI,MAEdX,MAAO,SAAUY,GAEf,OADAZ,EAAMa,UAAUC,QAAQF,EAAQG,IAAI,SAC7Bf,MAIbgB,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAiB,IAAI,IAAY,CACrCX,OAAQ,IAAI,IACZH,IAAKA,EACLN,MAAO,IAAI,KAAM,CACfG,OAAQ,IAAI,IAAO,CACjBD,MAAO,OACPE,MAAO,IAETH,KAAM,IAAI,IAAK,CACbC,MAAO,0BAMPmB,EAAqB,SAAUC,GACnChB,EACGiB,YACAC,KAAK,GACLC,YAAYH,GACZI,MAAK,SAAUC,GACdC,IAAMhB,EAAUe,EAASE,OAAS,EAAIF,EAAS,QAAKG,EAE9CC,EAAOC,SAASC,eAAe,QAEnCF,EAAKG,UADHtB,EACeA,EAAQuB,QAAU,KAAOvB,EAAQG,IAAI,QAErC,SAGfH,IAAYb,IACVA,GACFqB,EAAegB,YAAYC,cAActC,GAEvCa,GACFQ,EAAegB,YAAYE,WAAW1B,GAExCb,EAAYa,OAKpBN,EAAIiC,GAAG,eAAe,SAAUC,GACzBA,EAAIC,UACPpB,EAAmBmB,EAAIlB,UAI3BhB,EAAIiC,GAAG,SAAS,SAAUC,GACxBnB,EAAmBmB,EAAIlB,Y","file":"image-vector-layer.js","sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport VectorImageLayer from '../src/ol/layer/VectorImage.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Stroke, Style, Text} from '../src/ol/style.js';\n\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)',\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1,\n  }),\n  text: new Text(),\n});\n\nconst map = new Map({\n  layers: [\n    new VectorImageLayer({\n      imageRatio: 2,\n      source: new VectorSource({\n        url: 'data/geojson/countries.geojson',\n        format: new GeoJSON(),\n      }),\n      style: function (feature) {\n        style.getText().setText(feature.get('name'));\n        return style;\n      },\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n  }),\n});\n\nconst featureOverlay = new VectorLayer({\n  source: new VectorSource(),\n  map: map,\n  style: new Style({\n    stroke: new Stroke({\n      color: '#f00',\n      width: 1,\n    }),\n    fill: new Fill({\n      color: 'rgba(255,0,0,0.1)',\n    }),\n  }),\n});\n\nlet highlight;\nconst displayFeatureInfo = function (pixel) {\n  map\n    .getLayers()\n    .item(0)\n    .getFeatures(pixel)\n    .then(function (features) {\n      const feature = features.length > 0 ? features[0] : undefined;\n\n      const info = document.getElementById('info');\n      if (feature) {\n        info.innerHTML = feature.getId() + ': ' + feature.get('name');\n      } else {\n        info.innerHTML = '&nbsp;';\n      }\n\n      if (feature !== highlight) {\n        if (highlight) {\n          featureOverlay.getSource().removeFeature(highlight);\n        }\n        if (feature) {\n          featureOverlay.getSource().addFeature(feature);\n        }\n        highlight = feature;\n      }\n    });\n};\n\nmap.on('pointermove', function (evt) {\n  if (!evt.dragging) {\n    displayFeatureInfo(evt.pixel);\n  }\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}