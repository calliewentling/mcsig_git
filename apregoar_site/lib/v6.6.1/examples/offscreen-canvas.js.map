{"version":3,"sources":["webpack:///./offscreen-canvas.js","webpack:///./offscreen-canvas.worker.js","webpack:///../node_modules/json-stringify-safe/stringify.js"],"names":["container","transformContainer","canvas","rendering","workerFrameState","mainThreadFrameState","worker","Worker","updateContainerTransform","const","viewState","renderedViewState","center","resolution","rotation","renderedCenter","renderedResolution","renderedRotation","transform","style","map","Map","layers","Layer","render","frameState","document","createElement","position","width","height","appendChild","left","transformOrigin","animate","postMessage","action","JSON","parse","stringify","source","Source","attributions","target","view","View","resolutions","tileSize","getResolutions89","zoom","addControl","FullScreen","on","evt","dragging","pixel","getEventPixel","originalEvent","addEventListener","message","data","image","Image","crossOrigin","createImageBitmap","then","imageBitmap","src","propertiesFromFeatures","length","info","innerText","opacity","properties","e","Object","keys","filter","key","includes","reduce","newObj","currKey","showInfo","features","requestAnimationFrame","imageData","getContext","drawImage","getElementById","serializer","replacer","cycleReplacer","stack","value","slice","indexOf","join","thisPos","this","splice","push","Infinity","call","module","exports","obj","spaces","getSerialize"],"mappings":"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","file":"offscreen-canvas.js","sourcesContent":["import Layer from '../src/ol/layer/Layer.js';\nimport Map from '../src/ol/Map.js';\nimport Source from '../src/ol/source/Source.js';\nimport View from '../src/ol/View.js';\nimport Worker from 'worker-loader!./offscreen-canvas.worker.js'; //eslint-disable-line\nimport stringify from 'json-stringify-safe';\nimport {FullScreen} from '../src/ol/control.js';\nimport {compose, create} from '../src/ol/transform.js';\nimport {createXYZ} from '../src/ol/tilegrid.js';\nimport {toString as toTransformString} from '../src/ol/transform.js';\n\nconst worker = new Worker();\n\nlet container,\n  transformContainer,\n  canvas,\n  rendering,\n  workerFrameState,\n  mainThreadFrameState;\n\n// Transform the container to account for the differnece between the (newer)\n// main thread frameState and the (older) worker frameState\nfunction updateContainerTransform() {\n  if (workerFrameState) {\n    const viewState = mainThreadFrameState.viewState;\n    const renderedViewState = workerFrameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const renderedCenter = renderedViewState.center;\n    const renderedResolution = renderedViewState.resolution;\n    const renderedRotation = renderedViewState.rotation;\n    const transform = create();\n    // Skip the extra transform for rotated views, because it will not work\n    // correctly in that case\n    if (!rotation) {\n      compose(\n        transform,\n        (renderedCenter[0] - center[0]) / resolution,\n        (center[1] - renderedCenter[1]) / resolution,\n        renderedResolution / resolution,\n        renderedResolution / resolution,\n        rotation - renderedRotation,\n        0,\n        0\n      );\n    }\n    transformContainer.style.transform = toTransformString(transform);\n  }\n}\n\nconst map = new Map({\n  layers: [\n    new Layer({\n      render: function (frameState) {\n        if (!container) {\n          container = document.createElement('div');\n          container.style.position = 'absolute';\n          container.style.width = '100%';\n          container.style.height = '100%';\n          transformContainer = document.createElement('div');\n          transformContainer.style.position = 'absolute';\n          transformContainer.style.width = '100%';\n          transformContainer.style.height = '100%';\n          container.appendChild(transformContainer);\n          canvas = document.createElement('canvas');\n          canvas.style.position = 'absolute';\n          canvas.style.left = '0';\n          canvas.style.transformOrigin = 'top left';\n          transformContainer.appendChild(canvas);\n        }\n        mainThreadFrameState = frameState;\n        updateContainerTransform();\n        if (!rendering) {\n          rendering = true;\n          worker.postMessage({\n            action: 'render',\n            frameState: JSON.parse(stringify(frameState)),\n          });\n        } else {\n          frameState.animate = true;\n        }\n        return container;\n      },\n      source: new Source({\n        attributions: [\n          '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">© MapTiler</a>',\n          '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">© OpenStreetMap contributors</a>',\n        ],\n      }),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    resolutions: createXYZ({tileSize: 512}).getResolutions89,\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\nmap.addControl(new FullScreen());\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  worker.postMessage({\n    action: 'requestFeatures',\n    pixel: pixel,\n  });\n});\n\n// Worker messaging and actions\nworker.addEventListener('message', (message) => {\n  if (message.data.action === 'loadImage') {\n    // Image loader for ol-mapbox-style\n    const image = new Image();\n    image.crossOrigin = 'anonymous';\n    image.addEventListener('load', function () {\n      createImageBitmap(image, 0, 0, image.width, image.height).then(\n        (imageBitmap) => {\n          worker.postMessage(\n            {\n              action: 'imageLoaded',\n              image: imageBitmap,\n              src: message.data.src,\n            },\n            [imageBitmap]\n          );\n        }\n      );\n    });\n    image.src = message.data.src;\n  } else if (message.data.action === 'getFeatures') {\n    showInfo(message.data.features);\n  } else if (message.data.action === 'requestRender') {\n    // Worker requested a new render frame\n    map.render();\n  } else if (canvas && message.data.action === 'rendered') {\n    // Worker provies a new render frame\n    requestAnimationFrame(function () {\n      const imageData = message.data.imageData;\n      canvas.width = imageData.width;\n      canvas.height = imageData.height;\n      canvas.getContext('2d').drawImage(imageData, 0, 0);\n      canvas.style.transform = message.data.transform;\n      workerFrameState = message.data.frameState;\n      updateContainerTransform();\n    });\n    rendering = false;\n  }\n});\n\nconst info = document.getElementById('info');\nfunction showInfo(propertiesFromFeatures) {\n  if (propertiesFromFeatures.length == 0) {\n    info.innerText = '';\n    info.style.opacity = 0;\n    return;\n  }\n  const properties = propertiesFromFeatures.map((e) =>\n    Object.keys(e)\n      .filter((key) => !key.includes(':'))\n      .reduce((newObj, currKey) => ((newObj[currKey] = e[currKey]), newObj), {})\n  );\n  info.innerText = JSON.stringify(properties, null, 2);\n  info.style.opacity = 1;\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"offscreen-canvas.worker.worker.js\");\n}\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n"],"sourceRoot":""}