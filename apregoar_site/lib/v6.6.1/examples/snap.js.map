{"version":3,"sources":["webpack:///./snap.js"],"names":["raster","source","vector","style","fill","color","stroke","width","image","radius","map","layers","target","view","center","zoom","ExampleModify","init","this","select","addInteraction","modify","features","getFeatures","setEvents","const","selectedFeatures","on","forEach","each","remove","setActive","active","optionsForm","document","getElementById","ExampleDraw","Point","LineString","Polygon","Circle","getSource","type","getActive","activeType","elements","value","onchange","e","getAttribute","snap"],"mappings":"wOAOMA,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,MAGRC,EAAS,IAAI,IAAY,CAC7BD,OAAQ,IAAI,IACZE,MAAO,IAAI,KAAM,CACfC,KAAM,IAAI,IAAK,CACbC,MAAO,6BAETC,OAAQ,IAAI,IAAO,CACjBD,MAAO,UACPE,MAAO,IAETC,MAAO,IAAI,IAAY,CACrBC,OAAQ,EACRL,KAAM,IAAI,IAAK,CACbC,MAAO,kBAMTK,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACX,EAAQE,GACjBU,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,EAAE,KAAU,MACpBC,KAAM,MAIJC,EAAgB,CACpBC,KAAM,WACJC,KAAKC,OAAS,IAAI,IAClBT,EAAIU,eAAeF,KAAKC,QAExBD,KAAKG,OAAS,IAAI,IAAO,CACvBC,SAAUJ,KAAKC,OAAOI,gBAExBb,EAAIU,eAAeF,KAAKG,QAExBH,KAAKM,aAEPA,UAAW,WACTC,IAAMC,EAAmBR,KAAKC,OAAOI,cAErCL,KAAKC,OAAOQ,GAAG,iBAAiB,WAC9BD,EAAiBE,SAAQ,SAAUC,GACjCH,EAAiBI,OAAOD,UAI9BE,UAAW,SAAUC,GACnBd,KAAKC,OAAOY,UAAUC,GACtBd,KAAKG,OAAOU,UAAUC,KAG1BhB,EAAcC,OAEdQ,IAAMQ,EAAcC,SAASC,eAAe,gBAEtCC,EAAc,CAClBnB,KAAM,WACJP,EAAIU,eAAeF,KAAKmB,OACxBnB,KAAKmB,MAAMN,WAAU,GACrBrB,EAAIU,eAAeF,KAAKoB,YACxBpB,KAAKoB,WAAWP,WAAU,GAC1BrB,EAAIU,eAAeF,KAAKqB,SACxBrB,KAAKqB,QAAQR,WAAU,GACvBrB,EAAIU,eAAeF,KAAKsB,QACxBtB,KAAKsB,OAAOT,WAAU,IAExBM,MAAO,IAAI,KAAK,CACdpC,OAAQC,EAAOuC,YACfC,KAAM,UAERJ,WAAY,IAAI,KAAK,CACnBrC,OAAQC,EAAOuC,YACfC,KAAM,eAERH,QAAS,IAAI,KAAK,CAChBtC,OAAQC,EAAOuC,YACfC,KAAM,YAERF,OAAQ,IAAI,KAAK,CACfvC,OAAQC,EAAOuC,YACfC,KAAM,WAERC,UAAW,WACT,QAAOzB,KAAK0B,YAAa1B,KAAKA,KAAK0B,YAAYD,aAEjDZ,UAAW,SAAUC,GACnBP,IAAMiB,EAAOT,EAAYY,SAAS,aAAaC,MAC3Cd,GACFd,KAAK0B,YAAc1B,KAAKA,KAAK0B,YAAYb,WAAU,GACnDb,KAAKwB,GAAMX,WAAU,GACrBb,KAAK0B,WAAaF,IAElBxB,KAAK0B,YAAc1B,KAAKA,KAAK0B,YAAYb,WAAU,GACnDb,KAAK0B,WAAa,QAIxBR,EAAYnB,OAMZgB,EAAYc,SAAW,SAAUC,GAC/BvB,IAAMiB,EAAOM,EAAEpC,OAAOqC,aAAa,QAC7BH,EAAQE,EAAEpC,OAAOkC,MACX,aAARJ,EACFN,EAAYO,aAAeP,EAAYL,WAAU,GAChC,eAARW,IACI,UAATI,GACFV,EAAYL,WAAU,GACtBf,EAAce,WAAU,IACN,QAATe,IACTV,EAAYL,WAAU,GACtBf,EAAce,WAAU,MAK9BK,EAAYL,WAAU,GACtBf,EAAce,WAAU,GAKxBN,IAAMyB,EAAO,IAAI,IAAK,CACpBjD,OAAQC,EAAOuC,cAEjB/B,EAAIU,eAAe8B,K","file":"snap.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\nimport {Draw, Modify, Select, Snap} from '../src/ol/interaction.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\nconst raster = new TileLayer({\n  source: new OSM(),\n});\n\nconst vector = new VectorLayer({\n  source: new VectorSource(),\n  style: new Style({\n    fill: new Fill({\n      color: 'rgba(255, 255, 255, 0.2)',\n    }),\n    stroke: new Stroke({\n      color: '#ffcc33',\n      width: 2,\n    }),\n    image: new CircleStyle({\n      radius: 7,\n      fill: new Fill({\n        color: '#ffcc33',\n      }),\n    }),\n  }),\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [-11000000, 4600000],\n    zoom: 4,\n  }),\n});\n\nconst ExampleModify = {\n  init: function () {\n    this.select = new Select();\n    map.addInteraction(this.select);\n\n    this.modify = new Modify({\n      features: this.select.getFeatures(),\n    });\n    map.addInteraction(this.modify);\n\n    this.setEvents();\n  },\n  setEvents: function () {\n    const selectedFeatures = this.select.getFeatures();\n\n    this.select.on('change:active', function () {\n      selectedFeatures.forEach(function (each) {\n        selectedFeatures.remove(each);\n      });\n    });\n  },\n  setActive: function (active) {\n    this.select.setActive(active);\n    this.modify.setActive(active);\n  },\n};\nExampleModify.init();\n\nconst optionsForm = document.getElementById('options-form');\n\nconst ExampleDraw = {\n  init: function () {\n    map.addInteraction(this.Point);\n    this.Point.setActive(false);\n    map.addInteraction(this.LineString);\n    this.LineString.setActive(false);\n    map.addInteraction(this.Polygon);\n    this.Polygon.setActive(false);\n    map.addInteraction(this.Circle);\n    this.Circle.setActive(false);\n  },\n  Point: new Draw({\n    source: vector.getSource(),\n    type: 'Point',\n  }),\n  LineString: new Draw({\n    source: vector.getSource(),\n    type: 'LineString',\n  }),\n  Polygon: new Draw({\n    source: vector.getSource(),\n    type: 'Polygon',\n  }),\n  Circle: new Draw({\n    source: vector.getSource(),\n    type: 'Circle',\n  }),\n  getActive: function () {\n    return this.activeType ? this[this.activeType].getActive() : false;\n  },\n  setActive: function (active) {\n    const type = optionsForm.elements['draw-type'].value;\n    if (active) {\n      this.activeType && this[this.activeType].setActive(false);\n      this[type].setActive(true);\n      this.activeType = type;\n    } else {\n      this.activeType && this[this.activeType].setActive(false);\n      this.activeType = null;\n    }\n  },\n};\nExampleDraw.init();\n\n/**\n * Let user change the geometry type.\n * @param {Event} e Change event.\n */\noptionsForm.onchange = function (e) {\n  const type = e.target.getAttribute('name');\n  const value = e.target.value;\n  if (type == 'draw-type') {\n    ExampleDraw.getActive() && ExampleDraw.setActive(true);\n  } else if (type == 'interaction') {\n    if (value == 'modify') {\n      ExampleDraw.setActive(false);\n      ExampleModify.setActive(true);\n    } else if (value == 'draw') {\n      ExampleDraw.setActive(true);\n      ExampleModify.setActive(false);\n    }\n  }\n};\n\nExampleDraw.setActive(true);\nExampleModify.setActive(false);\n\n// The snap interaction must be added after the Modify and Draw interactions\n// in order for its map browser event handlers to be fired first. Its handlers\n// are responsible of doing the snapping.\nconst snap = new Snap({\n  source: vector.getSource(),\n});\nmap.addInteraction(snap);\n"],"sourceRoot":""}