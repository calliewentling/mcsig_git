{"version":3,"sources":["webpack:///./feature-animation.js"],"names":["tileLayer","source","wrapX","vector","map","layers","target","view","center","zoom","multiWorld","on","e","feature","start","flashGeom","listenerKey","Date","now","getGeometry","clone","event","const","elapsed","frameState","time","vectorContext","elapsedRatio","radius","opacity","style","image","stroke","color","width","setStyle","drawGeometry","render","window","setInterval","x","Math","random","y","geom","addFeature"],"mappings":"iPAYMA,EAAY,IAAI,IAAU,CAC9BC,OAAQ,IAAI,IAAI,CACdC,OAAO,MAILD,EAAS,IAAI,IAAa,CAC9BC,OAAO,IAEHC,EAAS,IAAI,IAAY,CAC7BF,OAAQA,IAGJG,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACL,EAAWG,GACpBG,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,EACNC,YAAY,MAgDhBT,EAAOU,GAAG,cAAc,SAAUC,GAnClC,IAAeC,EACPC,EACAC,EACAC,EAHOH,EAoCPD,EAAEC,QAnCFC,EAAQG,KAAKC,MACbH,EAAYF,EAAQM,cAAcC,QAClCJ,EAAchB,EAAUW,GAAG,cAEjC,SAAiBU,GACfC,IACMC,EADaF,EAAMG,WACEC,KAAOX,EAClC,GAAIS,GATS,KAUX,OAAQP,OADV,CAIAM,IAAMI,GAAgB,QAAiBL,GACjCM,EAAeJ,EAdR,IAgBPK,EAAiC,IAAxB,QAAQD,GAAqB,EACtCE,GAAU,QAAQ,EAAIF,GAEtBG,EAAQ,IAAI,KAAM,CACtBC,MAAO,IAAI,IAAY,CACrBH,OAAQA,EACRI,OAAQ,IAAI,IAAO,CACjBC,MAAO,mBAAqBJ,EAAU,IACtCK,MAAO,IAAOL,QAKpBH,EAAcS,SAASL,GACvBJ,EAAcU,aAAarB,GAE3BX,EAAIiC,gBAQRC,OAAOC,aAhDP,WACEjB,IAAMkB,EAAoB,IAAhBC,KAAKC,SAAiB,IAC1BC,EAAoB,IAAhBF,KAAKC,SAAiB,GAC1BE,EAAO,IAAI,KAAM,QAAW,CAACJ,EAAGG,KAChC9B,EAAU,IAAI,IAAQ+B,GAC5B3C,EAAO4C,WAAWhC,KA2CiB,O","file":"feature-animation.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport Point from '../src/ol/geom/Point.js';\nimport View from '../src/ol/View.js';\nimport {Circle as CircleStyle, Stroke, Style} from '../src/ol/style.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {easeOut} from '../src/ol/easing.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport {getVectorContext} from '../src/ol/render.js';\nimport {unByKey} from '../src/ol/Observable.js';\n\nconst tileLayer = new TileLayer({\n  source: new OSM({\n    wrapX: false,\n  }),\n});\n\nconst source = new VectorSource({\n  wrapX: false,\n});\nconst vector = new VectorLayer({\n  source: source,\n});\n\nconst map = new Map({\n  layers: [tileLayer, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n    multiWorld: true,\n  }),\n});\n\nfunction addRandomFeature() {\n  const x = Math.random() * 360 - 180;\n  const y = Math.random() * 170 - 85;\n  const geom = new Point(fromLonLat([x, y]));\n  const feature = new Feature(geom);\n  source.addFeature(feature);\n}\n\nconst duration = 3000;\nfunction flash(feature) {\n  const start = Date.now();\n  const flashGeom = feature.getGeometry().clone();\n  const listenerKey = tileLayer.on('postrender', animate);\n\n  function animate(event) {\n    const frameState = event.frameState;\n    const elapsed = frameState.time - start;\n    if (elapsed >= duration) {\n      unByKey(listenerKey);\n      return;\n    }\n    const vectorContext = getVectorContext(event);\n    const elapsedRatio = elapsed / duration;\n    // radius will be 5 at start and 30 at end.\n    const radius = easeOut(elapsedRatio) * 25 + 5;\n    const opacity = easeOut(1 - elapsedRatio);\n\n    const style = new Style({\n      image: new CircleStyle({\n        radius: radius,\n        stroke: new Stroke({\n          color: 'rgba(255, 0, 0, ' + opacity + ')',\n          width: 0.25 + opacity,\n        }),\n      }),\n    });\n\n    vectorContext.setStyle(style);\n    vectorContext.drawGeometry(flashGeom);\n    // tell OpenLayers to continue postrender animation\n    map.render();\n  }\n}\n\nsource.on('addfeature', function (e) {\n  flash(e.feature);\n});\n\nwindow.setInterval(addRandomFeature, 1000);\n"],"sourceRoot":""}