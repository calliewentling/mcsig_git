{"version":3,"sources":["webpack:///./scale-line.js"],"names":["control","unitsSelect","document","getElementById","typeSelect","stepsSelect","scaleTextCheckbox","showScaleTextDiv","scaleType","scaleBarSteps","scaleBarText","scaleControl","units","value","bar","steps","text","minWidth","const","map","controls","extend","layers","source","target","view","center","zoom","addEventListener","setUnits","style","display","removeControl","addControl","parseInt","checked"],"mappings":"8FAeIA,E,2DATEC,EAAcC,SAASC,eAAe,SACtCC,EAAaF,SAASC,eAAe,QACrCE,EAAcH,SAASC,eAAe,SACtCG,EAAoBJ,SAASC,eAAe,iBAC5CI,EAAmBL,SAASC,eAAe,oBAE7CK,EAAY,YACZC,EAAgB,EAChBC,GAAe,EAGnB,SAASC,IACP,OACEX,EADgB,cAAdQ,EACQ,IAAI,IAAU,CACtBI,MAAOX,EAAYY,QAIb,IAAI,IAAU,CACtBD,MAAOX,EAAYY,MACnBC,KAAK,EACLC,MAAON,EACPO,KAAMN,EACNO,SAAU,MAIdC,IAAMC,EAAM,IAAI,IAAI,CAClBC,UAAU,UAAkBC,OAAO,CAACV,MACpCW,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,OAGhBC,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MA+BV1B,EAAY2B,iBAAiB,UA3B7B,WACE5B,EAAQ6B,SAAS5B,EAAYY,UA2B/BT,EAAWwB,iBAAiB,UAzB5B,WACEpB,EAAYJ,EAAWS,MACE,aAArBT,EAAWS,OACbR,EAAYyB,MAAMC,QAAU,SAC5BxB,EAAiBuB,MAAMC,QAAU,SACjCZ,EAAIa,cAAchC,GAClBmB,EAAIc,WAAWtB,OAEfN,EAAYyB,MAAMC,QAAU,OAC5BxB,EAAiBuB,MAAMC,QAAU,OACjCZ,EAAIa,cAAchC,GAClBmB,EAAIc,WAAWtB,SAenBN,EAAYuB,iBAAiB,UAZ7B,WACEnB,EAAgByB,SAAS7B,EAAYQ,MAAO,IAC5CM,EAAIa,cAAchC,GAClBmB,EAAIc,WAAWtB,QAUjBL,EAAkBsB,iBAAiB,UARnC,WACElB,EAAeJ,EAAkB6B,QACjChB,EAAIa,cAAchC,GAClBmB,EAAIc,WAAWtB,U","file":"scale-line.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport View from '../src/ol/View.js';\nimport {ScaleLine, defaults as defaultControls} from '../src/ol/control.js';\n\nconst unitsSelect = document.getElementById('units');\nconst typeSelect = document.getElementById('type');\nconst stepsSelect = document.getElementById('steps');\nconst scaleTextCheckbox = document.getElementById('showScaleText');\nconst showScaleTextDiv = document.getElementById('showScaleTextDiv');\n\nlet scaleType = 'scaleline';\nlet scaleBarSteps = 4;\nlet scaleBarText = true;\nlet control;\n\nfunction scaleControl() {\n  if (scaleType === 'scaleline') {\n    control = new ScaleLine({\n      units: unitsSelect.value,\n    });\n    return control;\n  }\n  control = new ScaleLine({\n    units: unitsSelect.value,\n    bar: true,\n    steps: scaleBarSteps,\n    text: scaleBarText,\n    minWidth: 140,\n  });\n  return control;\n}\nconst map = new Map({\n  controls: defaultControls().extend([scaleControl()]),\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nfunction onChange() {\n  control.setUnits(unitsSelect.value);\n}\nfunction onChangeType() {\n  scaleType = typeSelect.value;\n  if (typeSelect.value === 'scalebar') {\n    stepsSelect.style.display = 'inline';\n    showScaleTextDiv.style.display = 'inline';\n    map.removeControl(control);\n    map.addControl(scaleControl());\n  } else {\n    stepsSelect.style.display = 'none';\n    showScaleTextDiv.style.display = 'none';\n    map.removeControl(control);\n    map.addControl(scaleControl());\n  }\n}\nfunction onChangeSteps() {\n  scaleBarSteps = parseInt(stepsSelect.value, 10);\n  map.removeControl(control);\n  map.addControl(scaleControl());\n}\nfunction onChangeScaleText() {\n  scaleBarText = scaleTextCheckbox.checked;\n  map.removeControl(control);\n  map.addControl(scaleControl());\n}\nunitsSelect.addEventListener('change', onChange);\ntypeSelect.addEventListener('change', onChangeType);\nstepsSelect.addEventListener('change', onChangeSteps);\nscaleTextCheckbox.addEventListener('change', onChangeScaleText);\n"],"sourceRoot":""}