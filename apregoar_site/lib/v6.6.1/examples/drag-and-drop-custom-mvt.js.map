{"version":3,"sources":["webpack:///./drag-and-drop-custom-mvt.js"],"names":["tileCoordZ","document","getElementById","tileCoordX","tileCoordY","customMVT","super","featureClass","readFeatures","source","options","extent","getTileCoordExtent","parseInt","value","dragAndDropInteraction","formatConstructors","map","interactions","extend","layers","target","view","center","zoom","on","event","const","vectorSource","features","addLayer","getView","fit","getExtent","displayFeatureInfo","pixel","forEachFeatureAtPixel","feature","push","length","i","ii","info","description","get","innerHTML","join","evt","dragging","getEventPixel","originalEvent","link","addEventListener","fullpath","filename","fetch","then","response","blob","navigator","msSaveBlob","href","URL","createObjectURL","download","click"],"mappings":"2PAcMA,EAAaC,SAASC,eAAe,cACrCC,EAAaF,SAASC,eAAe,cACrCE,EAAaH,SAASC,eAAe,cAErCG,EAAqB,YACzB,aACEC,OAAM,MAACC,aAAc,M,8FAEvB,EAAF,UAAEC,aAAA,SAAaC,EAAQC,GAMnB,OALAA,EAAQC,QAAS,UAAYC,mBAAmB,CAC9CC,SAASb,EAAWc,OACpBD,SAASV,EAAWW,OACpBD,SAAST,EAAWU,SAEfR,YAAME,aAAA,KAAa,KAAAC,EAAQC,I,EAVX,CAAH,KAgBlBK,EAAyB,IAAI,IAAY,CAC7CC,mBAAoB,CAACX,EAAW,IAAK,IAAS,IAAK,KAAK,OAGpDY,EAAM,IAAI,IAAI,CAClBC,cAAc,UAAsBC,OAAO,CAACJ,IAC5CK,OAAQ,CACN,IAAI,IAAU,CACZX,OAAQ,IAAI,OAGhBY,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIVT,EAAuBU,GAAG,eAAe,SAAUC,GACjDC,IAAMC,EAAe,IAAI,IAAa,CACpCC,SAAUH,EAAMG,WAElBZ,EAAIa,SACF,IAAI,IAAY,CACdrB,OAAQmB,KAGZX,EAAIc,UAAUC,IAAIJ,EAAaK,gBAGjCN,IAAMO,EAAqB,SAAUC,GACnCR,IAAME,EAAW,GAIjB,GAHAZ,EAAImB,sBAAsBD,GAAO,SAAUE,GACzCR,EAASS,KAAKD,MAEZR,EAASU,OAAS,EAAG,CACvBZ,IACIa,EAAGC,EADDC,EAAO,GAEb,IAAKF,EAAI,EAAGC,EAAKZ,EAASU,OAAQC,EAAIC,IAAMD,EAAG,CAC7Cb,IAAMgB,EACJd,EAASW,GAAGI,IAAI,SAChBf,EAASW,GAAGI,IAAI,UAChBf,EAASW,GAAGI,IAAI,SACdD,GACFD,EAAKJ,KAAKK,GAGd1C,SAASC,eAAe,QAAQ2C,UAAYH,EAAKI,KAAK,OAAS,aAE/D7C,SAASC,eAAe,QAAQ2C,UAAY,UAIhD5B,EAAIQ,GAAG,eAAe,SAAUsB,GAC9B,IAAIA,EAAIC,SAAR,CAGArB,IAAMQ,EAAQlB,EAAIgC,cAAcF,EAAIG,eACpChB,EAAmBC,OAGrBlB,EAAIQ,GAAG,SAAS,SAAUsB,GACxBb,EAAmBa,EAAIZ,UAKzBR,IAAMwB,EAAOlD,SAASC,eAAe,YAmBrCD,SAASC,eAAe,gBAAgBkD,iBAAiB,SAAS,YAjBlE,SAAkBC,EAAUC,GAC1BC,MAAMF,GACHG,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBF,MAAK,SAAUE,GACVC,UAAUC,WAEZD,UAAUC,WAAWF,EAAMJ,IAE3BH,EAAKU,KAAOC,IAAIC,gBAAgBL,GAChCP,EAAKa,SAAWV,EAChBH,EAAKc,YAgBXD,CATE,2FACAhE,EAAWc,MACX,IACAV,EAAWU,MACX,IACAX,EAAWW,MACX,OAEAd,EAAWc,MAAQ,IAAMX,EAAWW,MAAQ,IAAMV,EAAWU,MAAQ,a","file":"drag-and-drop-custom-mvt.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {\n  DragAndDrop,\n  defaults as defaultInteractions,\n} from '../src/ol/interaction.js';\nimport {GPX, GeoJSON, IGC, KML, MVT, TopoJSON} from '../src/ol/format.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {createXYZ} from '../src/ol/tilegrid.js';\n\n// Define a custom MVT format as ol/format/MVT requires an extent\n\nconst tileCoordZ = document.getElementById('tileCoordZ');\nconst tileCoordX = document.getElementById('tileCoordX');\nconst tileCoordY = document.getElementById('tileCoordY');\n\nclass customMVT extends MVT {\n  constructor() {\n    super({featureClass: Feature});\n  }\n  readFeatures(source, options) {\n    options.extent = createXYZ().getTileCoordExtent([\n      parseInt(tileCoordZ.value),\n      parseInt(tileCoordX.value),\n      parseInt(tileCoordY.value),\n    ]);\n    return super.readFeatures(source, options);\n  }\n}\n\n// Set up map with Drag and Drop interaction\n\nconst dragAndDropInteraction = new DragAndDrop({\n  formatConstructors: [customMVT, GPX, GeoJSON, IGC, KML, TopoJSON],\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([dragAndDropInteraction]),\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\ndragAndDropInteraction.on('addfeatures', function (event) {\n  const vectorSource = new VectorSource({\n    features: event.features,\n  });\n  map.addLayer(\n    new VectorLayer({\n      source: vectorSource,\n    })\n  );\n  map.getView().fit(vectorSource.getExtent());\n});\n\nconst displayFeatureInfo = function (pixel) {\n  const features = [];\n  map.forEachFeatureAtPixel(pixel, function (feature) {\n    features.push(feature);\n  });\n  if (features.length > 0) {\n    const info = [];\n    let i, ii;\n    for (i = 0, ii = features.length; i < ii; ++i) {\n      const description =\n        features[i].get('name') ||\n        features[i].get('_name') ||\n        features[i].get('layer');\n      if (description) {\n        info.push(description);\n      }\n    }\n    document.getElementById('info').innerHTML = info.join(', ') || '&nbsp';\n  } else {\n    document.getElementById('info').innerHTML = '&nbsp;';\n  }\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n\n// Sample data download\n\nconst link = document.getElementById('download');\n\nfunction download(fullpath, filename) {\n  fetch(fullpath)\n    .then(function (response) {\n      return response.blob();\n    })\n    .then(function (blob) {\n      if (navigator.msSaveBlob) {\n        // link download attribute does not work on MS browsers\n        navigator.msSaveBlob(blob, filename);\n      } else {\n        link.href = URL.createObjectURL(blob);\n        link.download = filename;\n        link.click();\n      }\n    });\n}\n\ndocument.getElementById('download-mvt').addEventListener('click', function () {\n  const fullpath =\n    'https://basemaps.arcgis.com/v1/arcgis/rest/services/World_Basemap/VectorTileServer/tile/' +\n    tileCoordZ.value +\n    '/' +\n    tileCoordY.value +\n    '/' +\n    tileCoordX.value +\n    '.pbf';\n  const filename =\n    tileCoordZ.value + '-' + tileCoordX.value + '-' + tileCoordY.value + '.mvt';\n  download(fullpath, filename);\n});\n"],"sourceRoot":""}