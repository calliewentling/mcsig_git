{"version":3,"sources":["webpack:///../src/ol/format/WMSCapabilities.js","webpack:///./wms-capabilities.js"],"names":["NAMESPACE_URIS","PARSERS","node","objectStack","SERVICE_PARSERS","CAPABILITY_PARSERS","REQUEST_PARSERS","EXCEPTION_PARSERS","const","layerObject","LAYER_PARSERS","undefined","Object","assign","readLayer","WMSCapabilities","super","this","version","readFromNode","getAttribute","trim","wmsCapabilityObject","XML","readKeywordList","CONTACT_INFORMATION_PARSERS","CONTACT_PERSON_PARSERS","CONTACT_ADDRESS_PARSERS","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","extent","resolutions","ATTRIBUTION_PARSERS","authorityObject","readFormatOnlineresource","metadataObject","STYLE_PARSERS","readSizedFormatOnlineresource","readOperationType","OPERATIONTYPE_PARSERS","DCPTYPE_PARSERS","HTTP_PARSERS","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","parentLayerObject","length","let","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","forEach","key","childValue","concat","parentValue","formatOnlineresource","size","parser","fetch","then","response","text","result","read","document","getElementById","innerText","JSON","stringify"],"mappings":"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","file":"wms-capabilities.js","sourcesContent":["/**\n * @module ol/format/WMSCapabilities\n */\nimport XML from './XML.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {\n  readBooleanString,\n  readDecimal,\n  readDecimalString,\n  readNonNegativeInteger,\n  readNonNegativeIntegerString,\n  readString,\n} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wms'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Service': makeObjectPropertySetter(readService),\n  'Capability': makeObjectPropertySetter(readCapability),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Request': makeObjectPropertySetter(readRequest),\n  'Exception': makeObjectPropertySetter(readException),\n  'Layer': makeObjectPropertySetter(readCapabilityLayer),\n});\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop(\n      {\n        'version': this.version,\n      },\n      PARSERS,\n      node,\n      []\n    );\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'ContactInformation': makeObjectPropertySetter(readContactInformation),\n  'Fees': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n  'ContactPosition': makeObjectPropertySetter(readString),\n  'ContactAddress': makeObjectPropertySetter(readContactAddress),\n  'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n  'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n  'ContactElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPerson': makeObjectPropertySetter(readString),\n  'ContactOrganization': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AddressType': makeObjectPropertySetter(readString),\n  'Address': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'StateOrProvince': makeObjectPropertySetter(readString),\n  'PostCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeArrayPusher(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'CRS': makeObjectPropertyPusher(readString),\n  'EX_GeographicBoundingBox': makeObjectPropertySetter(\n    readEXGeographicBoundingBox\n  ),\n  'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n  'Dimension': makeObjectPropertyPusher(readDimension),\n  'Attribution': makeObjectPropertySetter(readAttribution),\n  'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n  'Identifier': makeObjectPropertyPusher(readString),\n  'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n  'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'Style': makeObjectPropertyPusher(readStyle),\n  'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'Layer': makeObjectPropertyPusher(readLayer),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n  'northBoundLatitude': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'GetCapabilities': makeObjectPropertySetter(readOperationType),\n  'GetMap': makeObjectPropertySetter(readOperationType),\n  'GetFeatureInfo': makeObjectPropertySetter(readOperationType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertyPusher(readString),\n  'DCPType': makeObjectPropertyPusher(readDCPType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHTTP),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertySetter(readFormatOnlineresource),\n  'Post': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n  'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n  'StyleURL': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Keyword': makeArrayPusher(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy')),\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy')),\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions,\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['northBoundLatitude']);\n  if (\n    westBoundLongitude === undefined ||\n    southBoundLatitude === undefined ||\n    eastBoundLongitude === undefined ||\n    northBoundLatitude === undefined\n  ) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude,\n    southBoundLatitude,\n    eastBoundLongitude,\n    northBoundLatitude,\n  ];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (layerObject['Layer'] === undefined) {\n    return Object.assign(layerObject, readLayer(node, objectStack));\n  }\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (\n    objectStack[objectStack.length - 1]\n  );\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function (key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = [\n    'EX_GeographicBoundingBox',\n    'BoundingBox',\n    'Dimension',\n    'Attribution',\n    'MinScaleDenominator',\n    'MaxScaleDenominator',\n  ];\n  replaceKeys.forEach(function (key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node),\n  };\n  return dimensionObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height')),\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\nexport default WMSCapabilities;\n","import WMSCapabilities from '../src/ol/format/WMSCapabilities.js';\n\nconst parser = new WMSCapabilities();\n\nfetch('data/ogcsample.xml')\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    const result = parser.read(text);\n    document.getElementById('log').innerText = JSON.stringify(result, null, 2);\n  });\n"],"sourceRoot":""}