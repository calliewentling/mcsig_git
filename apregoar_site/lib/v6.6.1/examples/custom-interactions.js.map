{"version":3,"sources":["webpack:///./custom-interactions.js"],"names":["Drag","super","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","this","coordinate_","cursor_","feature_","previousCursor_","undefined","evt","const","feature","map","forEachFeatureAtPixel","pixel","coordinate","deltaX","deltaY","getGeometry","translate","element","getTargetElement","style","cursor","pointFeature","lineFeature","polygonFeature","interactions","extend","layers","source","url","features","image","anchor","anchorXUnits","anchorYUnits","opacity","src","stroke","width","color","fill","target","view","center","zoom"],"mappings":"4PAYMA,EAA+B,YACnC,aACEC,OAAM,MACJC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,cAAeA,IAOjBC,KAAKC,EAAc,KAMnBD,KAAKE,EAAU,UAMfF,KAAKG,EAAW,KAMhBH,KAAKI,OAAkBC,E,gGA/BU,CAAlB,KAuCnB,SAAST,EAAgBU,GACvBC,IAEMC,EAFMF,EAAIG,IAEIC,sBAAsBJ,EAAIK,OAAO,SAAUH,GAC7D,OAAOA,KAQT,OALIA,IACFR,KAAKC,EAAcK,EAAIM,WACvBZ,KAAKG,EAAWK,KAGTA,EAMX,SAASX,EAAgBS,GACvBC,IAAMM,EAASP,EAAIM,WAAW,GAAKZ,KAAKC,EAAY,GAC9Ca,EAASR,EAAIM,WAAW,GAAKZ,KAAKC,EAAY,GAEnCD,KAAKG,EAASY,cACtBC,UAAUH,EAAQC,GAE3Bd,KAAKC,EAAY,GAAKK,EAAIM,WAAW,GACrCZ,KAAKC,EAAY,GAAKK,EAAIM,WAAW,GAMvC,SAASd,EAAgBQ,GACvB,GAAIN,KAAKE,EAAS,CAChBK,IACMC,EADMF,EAAIG,IACIC,sBAAsBJ,EAAIK,OAAO,SAAUH,GAC7D,OAAOA,KAEHS,EAAUX,EAAIG,IAAIS,mBACpBV,EACES,EAAQE,MAAMC,QAAUpB,KAAKE,IAC/BF,KAAKI,EAAkBa,EAAQE,MAAMC,OACrCH,EAAQE,MAAMC,OAASpB,KAAKE,QAEIG,IAAzBL,KAAKI,IACda,EAAQE,MAAMC,OAASpB,KAAKI,EAC5BJ,KAAKI,OAAkBC,IAQ7B,SAASN,IAGP,OAFAC,KAAKC,EAAc,KACnBD,KAAKG,EAAW,MACT,EAGTI,IAAMc,EAAe,IAAI,IAAQ,IAAI,IAAM,CAAC,EAAG,KAEzCC,EAAc,IAAI,IACtB,IAAI,IAAW,CACb,EAAE,IAAK,KACP,EAAE,IAAK,QAILC,EAAiB,IAAI,IACzB,IAAI,KAAQ,CACV,CACE,EAAE,KAAM,KACR,EAAE,IAAK,KACP,EAAE,IAAK,KACP,EAAE,KAAM,KACR,EAAE,KAAM,SAQF,IAAI,IAAI,CAClBC,cAAc,UAAsBC,OAAO,CAAC,IAAI/B,IAChDgC,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,IAAS,CACnBC,IACE,uKAIN,IAAI,IAAY,CACdD,OAAQ,IAAI,IAAa,CACvBE,SAAU,CAACR,EAAcC,EAAaC,KAExCJ,MAAO,IAAI,KAAM,CACfW,MAAO,IAAI,IAAK,CACdC,OAAQ,CAAC,GAAK,IACdC,aAAc,WACdC,aAAc,SACdC,QAAS,IACTC,IAAK,kBAEPC,OAAQ,IAAI,IAAO,CACjBC,MAAO,EACPC,MAAO,CAAC,IAAK,EAAG,EAAG,KAErBC,KAAM,IAAI,IAAK,CACbD,MAAO,CAAC,EAAG,EAAG,IAAK,WAK3BE,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,Q","file":"custom-interactions.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Icon, Stroke, Style} from '../src/ol/style.js';\nimport {LineString, Point, Polygon} from '../src/ol/geom.js';\nimport {\n  Pointer as PointerInteraction,\n  defaults as defaultInteractions,\n} from '../src/ol/interaction.js';\nimport {TileJSON, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\nclass Drag extends PointerInteraction {\n  constructor() {\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent,\n    });\n\n    /**\n     * @type {import(\"../src/ol/coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.cursor_ = 'pointer';\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.feature_ = null;\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.previousCursor_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Map browser event.\n * @return {boolean} `true` to start the drag sequence.\n */\nfunction handleDownEvent(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    return feature;\n  });\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n  }\n\n  return !!feature;\n}\n\n/**\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Map browser event.\n */\nfunction handleDragEvent(evt) {\n  const deltaX = evt.coordinate[0] - this.coordinate_[0];\n  const deltaY = evt.coordinate[1] - this.coordinate_[1];\n\n  const geometry = this.feature_.getGeometry();\n  geometry.translate(deltaX, deltaY);\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n}\n\n/**\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Event.\n */\nfunction handleMoveEvent(evt) {\n  if (this.cursor_) {\n    const map = evt.map;\n    const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n      return feature;\n    });\n    const element = evt.map.getTargetElement();\n    if (feature) {\n      if (element.style.cursor != this.cursor_) {\n        this.previousCursor_ = element.style.cursor;\n        element.style.cursor = this.cursor_;\n      }\n    } else if (this.previousCursor_ !== undefined) {\n      element.style.cursor = this.previousCursor_;\n      this.previousCursor_ = undefined;\n    }\n  }\n}\n\n/**\n * @return {boolean} `false` to stop the drag sequence.\n */\nfunction handleUpEvent() {\n  this.coordinate_ = null;\n  this.feature_ = null;\n  return false;\n}\n\nconst pointFeature = new Feature(new Point([0, 0]));\n\nconst lineFeature = new Feature(\n  new LineString([\n    [-1e7, 1e6],\n    [-1e6, 3e6],\n  ])\n);\n\nconst polygonFeature = new Feature(\n  new Polygon([\n    [\n      [-3e6, -1e6],\n      [-3e6, 1e6],\n      [-1e6, 1e6],\n      [-1e6, -1e6],\n      [-3e6, -1e6],\n    ],\n  ])\n);\n\nconst key =\n  'pk.eyJ1IjoiYWhvY2V2YXIiLCJhIjoiY2pzbmg0Nmk5MGF5NzQzbzRnbDNoeHJrbiJ9.7_-_gL8ur7ZtEiNwRfCy7Q';\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([new Drag()]),\n  layers: [\n    new TileLayer({\n      source: new TileJSON({\n        url:\n          'https://a.tiles.mapbox.com/v4/aj.1x1-degrees.json?secure&access_token=' +\n          key,\n      }),\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        features: [pointFeature, lineFeature, polygonFeature],\n      }),\n      style: new Style({\n        image: new Icon({\n          anchor: [0.5, 46],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'pixels',\n          opacity: 0.95,\n          src: 'data/icon.png',\n        }),\n        stroke: new Stroke({\n          width: 3,\n          color: [255, 0, 0, 1],\n        }),\n        fill: new Fill({\n          color: [0, 0, 255, 0.6],\n        }),\n      }),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n"],"sourceRoot":""}