{"version":3,"sources":["webpack:///./vector-layer.js"],"names":["highlight","style","fill","color","stroke","width","text","font","vectorLayer","source","url","format","feature","getText","setText","get","map","layers","target","view","center","zoom","highlightStyle","featureOverlay","displayFeatureInfo","pixel","const","forEachFeatureAtPixel","info","document","getElementById","innerHTML","getId","getSource","removeFeature","addFeature","on","evt","dragging","getEventPixel","originalEvent"],"mappings":"6FA4EIA,E,wFArEEC,EAAQ,IAAI,KAAM,CACtBC,KAAM,IAAI,IAAK,CACbC,MAAO,6BAETC,OAAQ,IAAI,IAAO,CACjBD,MAAO,UACPE,MAAO,IAETC,KAAM,IAAI,IAAK,CACbC,KAAM,0BACNL,KAAM,IAAI,IAAK,CACbC,MAAO,SAETC,OAAQ,IAAI,IAAO,CACjBD,MAAO,OACPE,MAAO,QAKPG,EAAc,IAAI,IAAY,CAClCC,OAAQ,IAAI,IAAa,CACvBC,IAAK,iCACLC,OAAQ,IAAI,MAEdV,MAAO,SAAUW,GAEf,OADAX,EAAMY,UAAUC,QAAQF,EAAQG,IAAI,SAC7Bd,KAILe,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACT,GACTU,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAiB,IAAI,KAAM,CAC/BlB,OAAQ,IAAI,IAAO,CACjBD,MAAO,OACPE,MAAO,IAETH,KAAM,IAAI,IAAK,CACbC,MAAO,sBAETG,KAAM,IAAI,IAAK,CACbC,KAAM,0BACNL,KAAM,IAAI,IAAK,CACbC,MAAO,SAETC,OAAQ,IAAI,IAAO,CACjBD,MAAO,OACPE,MAAO,QAKPkB,EAAiB,IAAI,IAAY,CACrCd,OAAQ,IAAI,IACZO,IAAKA,EACLf,MAAO,SAAUW,GAEf,OADAU,EAAeT,UAAUC,QAAQF,EAAQG,IAAI,SACtCO,KAKLE,EAAqB,SAAUC,GACnCC,IAAMd,EAAUI,EAAIW,sBAAsBF,GAAO,SAAUb,GACzD,OAAOA,KAGHgB,EAAOC,SAASC,eAAe,QAEnCF,EAAKG,UADHnB,EACeA,EAAQoB,QAAU,KAAOpB,EAAQG,IAAI,QAErC,SAGfH,IAAYZ,IACVA,GACFuB,EAAeU,YAAYC,cAAclC,GAEvCY,GACFW,EAAeU,YAAYE,WAAWvB,GAExCZ,EAAYY,IAIhBI,EAAIoB,GAAG,eAAe,SAAUC,GAC9B,IAAIA,EAAIC,SAAR,CAGAZ,IAAMD,EAAQT,EAAIuB,cAAcF,EAAIG,eACpChB,EAAmBC,OAGrBT,EAAIoB,GAAG,SAAS,SAAUC,GACxBb,EAAmBa,EAAIZ,Y","file":"vector-layer.js","sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Stroke, Style, Text} from '../src/ol/style.js';\n\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)',\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1,\n  }),\n  text: new Text({\n    font: '12px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000',\n    }),\n    stroke: new Stroke({\n      color: '#fff',\n      width: 3,\n    }),\n  }),\n});\n\nconst vectorLayer = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/geojson/countries.geojson',\n    format: new GeoJSON(),\n  }),\n  style: function (feature) {\n    style.getText().setText(feature.get('name'));\n    return style;\n  },\n});\n\nconst map = new Map({\n  layers: [vectorLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n  }),\n});\n\nconst highlightStyle = new Style({\n  stroke: new Stroke({\n    color: '#f00',\n    width: 1,\n  }),\n  fill: new Fill({\n    color: 'rgba(255,0,0,0.1)',\n  }),\n  text: new Text({\n    font: '12px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000',\n    }),\n    stroke: new Stroke({\n      color: '#f00',\n      width: 3,\n    }),\n  }),\n});\n\nconst featureOverlay = new VectorLayer({\n  source: new VectorSource(),\n  map: map,\n  style: function (feature) {\n    highlightStyle.getText().setText(feature.get('name'));\n    return highlightStyle;\n  },\n});\n\nlet highlight;\nconst displayFeatureInfo = function (pixel) {\n  const feature = map.forEachFeatureAtPixel(pixel, function (feature) {\n    return feature;\n  });\n\n  const info = document.getElementById('info');\n  if (feature) {\n    info.innerHTML = feature.getId() + ': ' + feature.get('name');\n  } else {\n    info.innerHTML = '&nbsp;';\n  }\n\n  if (feature !== highlight) {\n    if (highlight) {\n      featureOverlay.getSource().removeFeature(highlight);\n    }\n    if (feature) {\n      featureOverlay.getSource().addFeature(feature);\n    }\n    highlight = feature;\n  }\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}