{"version":3,"sources":["webpack:///./gpx.js"],"names":["raster","source","attributions","url","maxZoom","style","image","fill","color","radius","stroke","width","vector","format","feature","getGeometry","getType","map","layers","target","document","getElementById","view","center","zoom","displayFeatureInfo","pixel","const","features","forEachFeatureAtPixel","push","length","i","ii","info","get","innerHTML","join","getTarget","cursor","on","evt","dragging","getEventPixel","originalEvent"],"mappings":"0MAaMA,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,IAAI,CACdC,aALF,4LAMEC,IAAK,iGACLC,QAAS,OAIPC,EAAQ,CACZ,MAAS,IAAI,KAAM,CACjBC,MAAO,IAAI,IAAY,CACrBC,KAAM,IAAI,IAAK,CACbC,MAAO,wBAETC,OAAQ,EACRC,OAAQ,IAAI,IAAO,CACjBF,MAAO,OACPG,MAAO,QAIb,WAAc,IAAI,KAAM,CACtBD,OAAQ,IAAI,IAAO,CACjBF,MAAO,OACPG,MAAO,MAGX,gBAAmB,IAAI,KAAM,CAC3BD,OAAQ,IAAI,IAAO,CACjBF,MAAO,OACPG,MAAO,OAKPC,EAAS,IAAI,IAAY,CAC7BX,OAAQ,IAAI,IAAa,CACvBE,IAAK,0BACLU,OAAQ,IAAI,MAEdR,MAAO,SAAUS,GACf,OAAOT,EAAMS,EAAQC,cAAcC,cAIjCC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAAClB,EAAQY,GACjBO,OAAQC,SAASC,eAAe,OAChCC,KAAM,IAAI,KAAK,CACbC,OAAQ,EAAE,kBAAmB,mBAC7BC,KAAM,OAIJC,EAAqB,SAAUC,GACnCC,IAAMC,EAAW,GAIjB,GAHAX,EAAIY,sBAAsBH,GAAO,SAAUZ,GACzCc,EAASE,KAAKhB,MAEZc,EAASG,OAAS,EAAG,CACvBJ,IACIK,EAAGC,EADDC,EAAO,GAEb,IAAKF,EAAI,EAAGC,EAAKL,EAASG,OAAQC,EAAIC,IAAMD,EAC1CE,EAAKJ,KAAKF,EAASI,GAAGG,IAAI,SAE5Bf,SAASC,eAAe,QAAQe,UAAYF,EAAKG,KAAK,OAAS,YAC/DpB,EAAIqB,YAAYjC,MAAMkC,OAAS,eAE/BnB,SAASC,eAAe,QAAQe,UAAY,SAC5CnB,EAAIqB,YAAYjC,MAAMkC,OAAS,IAInCtB,EAAIuB,GAAG,eAAe,SAAUC,GAC9B,IAAIA,EAAIC,SAAR,CAGAf,IAAMD,EAAQT,EAAI0B,cAAcF,EAAIG,eACpCnB,EAAmBC,OAGrBT,EAAIuB,GAAG,SAAS,SAAUC,GACxBhB,EAAmBgB,EAAIf,Y","file":"gpx.js","sourcesContent":["import GPX from '../src/ol/format/GPX.js';\nimport Map from '../src/ol/Map.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport XYZ from '../src/ol/source/XYZ.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\nconst attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nconst raster = new TileLayer({\n  source: new XYZ({\n    attributions: attributions,\n    url: 'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\n    maxZoom: 20,\n  }),\n});\n\nconst style = {\n  'Point': new Style({\n    image: new CircleStyle({\n      fill: new Fill({\n        color: 'rgba(255,255,0,0.4)',\n      }),\n      radius: 5,\n      stroke: new Stroke({\n        color: '#ff0',\n        width: 1,\n      }),\n    }),\n  }),\n  'LineString': new Style({\n    stroke: new Stroke({\n      color: '#f00',\n      width: 3,\n    }),\n  }),\n  'MultiLineString': new Style({\n    stroke: new Stroke({\n      color: '#0f0',\n      width: 3,\n    }),\n  }),\n};\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/gpx/fells_loop.gpx',\n    format: new GPX(),\n  }),\n  style: function (feature) {\n    return style[feature.getGeometry().getType()];\n  },\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: document.getElementById('map'),\n  view: new View({\n    center: [-7916041.528716288, 5228379.045749711],\n    zoom: 12,\n  }),\n});\n\nconst displayFeatureInfo = function (pixel) {\n  const features = [];\n  map.forEachFeatureAtPixel(pixel, function (feature) {\n    features.push(feature);\n  });\n  if (features.length > 0) {\n    const info = [];\n    let i, ii;\n    for (i = 0, ii = features.length; i < ii; ++i) {\n      info.push(features[i].get('desc'));\n    }\n    document.getElementById('info').innerHTML = info.join(', ') || '(unknown)';\n    map.getTarget().style.cursor = 'pointer';\n  } else {\n    document.getElementById('info').innerHTML = '&nbsp;';\n    map.getTarget().style.cursor = '';\n  }\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}