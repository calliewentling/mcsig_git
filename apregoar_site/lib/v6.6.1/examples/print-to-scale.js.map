{"version":3,"sources":["webpack:///./print-to-scale.js"],"names":["const","proj27700","setExtent","raster","fetch","then","response","text","result","read","options","layer","attributions","Date","getFullYear","crossOrigin","projection","wrapX","setSource","map","layers","controls","attributionOptions","collapsible","target","view","center","zoom","scaleLine","bar","minWidth","addControl","dims","a0","a1","a2","a3","a4","a5","exportOptions","useCORS","ignoreElements","element","className","indexOf","exportButton","document","getElementById","addEventListener","disabled","body","style","cursor","format","value","resolution","scale","dim","width","Math","round","height","viewResolution","getView","getResolution","scaleResolution","getProjection","getCenter","once","html2canvas","getViewport","canvas","pdf","jspdf","jsPDF","undefined","addImage","toDataURL","save","setDpi","getTargetElement","updateSize","setResolution"],"mappings":"iMAUA,SACE,aACA,qKAMF,OAAS,KAETA,IAAMC,GAAY,QAAc,cAChCA,EAAUC,UAAU,CAAC,EAAG,EAAG,IAAQ,OAEnCF,IAAMG,EAAS,IAAI,IAInBC,MADE,sGAECC,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBF,MAAK,SAAUE,GACdP,IAAMQ,GAAS,IAAI,KAAmBC,KAAKF,GACrCG,GAAU,OAAwBF,EAAQ,CAC9CG,MAAO,mBAETD,EAAQE,aACN,0DACA,IAAIC,MAAOC,cACbJ,EAAQK,YAAc,GACtBL,EAAQM,WAAaf,EACrBS,EAAQO,OAAQ,EAChBd,EAAOe,UAAU,IAAI,IAAKR,OAG9BV,IAAMmB,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACjB,GACTkB,UAAU,QAAgB,CACxBC,mBAAoB,CAACC,aAAa,KAEpCC,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,OAAQ,QACjBV,WAAYf,EACZ0B,KAAM,MAIJC,EAAY,IAAI,IAAU,CAACC,KAAK,EAAMtB,MAAM,EAAMuB,SAAU,MAClEX,EAAIY,WAAWH,GAEf5B,IAAMgC,EAAO,CACXC,GAAI,CAAC,KAAM,KACXC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,MAKNC,EAAgB,CACpBC,SAAS,EACTC,eAAgB,SAAUC,GACxB1C,IAAM2C,EAAYD,EAAQC,WAAa,GACvC,SACuC,IAArCA,EAAUC,QAAQ,eAClBD,EAAUC,QAAQ,aAAe,GAChCD,EAAUC,QAAQ,mBAAqB,GACtCD,EAAUC,QAAQ,uBAKpBC,EAAeC,SAASC,eAAe,cAE7CF,EAAaG,iBACX,SACA,WACEH,EAAaI,UAAW,EACxBH,SAASI,KAAKC,MAAMC,OAAS,WAE7BpD,IAAMqD,EAASP,SAASC,eAAe,UAAUO,MAC3CC,EAAaT,SAASC,eAAe,cAAcO,MACnDE,EAAQV,SAASC,eAAe,SAASO,MACzCG,EAAMzB,EAAKqB,GACXK,EAAQC,KAAKC,MAAOH,EAAI,GAAKF,EAAc,MAC3CM,EAASF,KAAKC,MAAOH,EAAI,GAAKF,EAAc,MAC5CO,EAAiB3C,EAAI4C,UAAUC,gBAC/BC,EACJT,GACA,QACErC,EAAI4C,UAAUG,gBACdX,EAAa,KACbpC,EAAI4C,UAAUI,aAGlBhD,EAAIiD,KAAK,kBAAkB,WACzB7B,EAAcmB,MAAQA,EACtBnB,EAAcsB,OAASA,EACvBQ,YAAYlD,EAAImD,cAAe/B,GAAelC,MAAK,SAAUkE,GAC3DvE,IAAMwE,EAAM,IAAIC,MAAMC,MAAM,iBAAaC,EAAWtB,GACpDmB,EAAII,SACFL,EAAOM,UAAU,cACjB,OACA,EACA,EACApB,EAAI,GACJA,EAAI,IAENe,EAAIM,KAAK,WAETlD,EAAUmD,SACV5D,EAAI6D,mBAAmB7B,MAAMO,MAAQ,GACrCvC,EAAI6D,mBAAmB7B,MAAMU,OAAS,GACtC1C,EAAI8D,aACJ9D,EAAI4C,UAAUmB,cAAcpB,GAC5BjB,EAAaI,UAAW,EACxBH,SAASI,KAAKC,MAAMC,OAAS,aAKjCxB,EAAUmD,OAAOxB,GACjBpC,EAAI6D,mBAAmB7B,MAAMO,MAAQA,EAAQ,KAC7CvC,EAAI6D,mBAAmB7B,MAAMU,OAASA,EAAS,KAC/C1C,EAAI8D,aACJ9D,EAAI4C,UAAUmB,cAAcjB,MAE9B,K","file":"print-to-scale.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport View from '../src/ol/View.js';\nimport WMTS, {optionsFromCapabilities} from '../src/ol/source/WMTS.js';\nimport WMTSCapabilities from '../src/ol/format/WMTSCapabilities.js';\nimport proj4 from 'proj4';\nimport {ScaleLine, defaults as defaultControls} from '../src/ol/control.js';\nimport {getPointResolution, get as getProjection} from '../src/ol/proj.js';\nimport {register} from '../src/ol/proj/proj4.js';\n\nproj4.defs(\n  'EPSG:27700',\n  '+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 ' +\n    '+x_0=400000 +y_0=-100000 +ellps=airy ' +\n    '+towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489 ' +\n    '+units=m +no_defs'\n);\n\nregister(proj4);\n\nconst proj27700 = getProjection('EPSG:27700');\nproj27700.setExtent([0, 0, 700000, 1300000]);\n\nconst raster = new TileLayer();\n\nconst url =\n  'https://tiles.arcgis.com/tiles/qHLhLQrcvEnxjtPr/arcgis/rest/services/OS_Open_Raster/MapServer/WMTS';\nfetch(url)\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    const result = new WMTSCapabilities().read(text);\n    const options = optionsFromCapabilities(result, {\n      layer: 'OS_Open_Raster',\n    });\n    options.attributions =\n      'Contains OS data Â© Crown Copyright and database right ' +\n      new Date().getFullYear();\n    options.crossOrigin = '';\n    options.projection = proj27700;\n    options.wrapX = false;\n    raster.setSource(new WMTS(options));\n  });\n\nconst map = new Map({\n  layers: [raster],\n  controls: defaultControls({\n    attributionOptions: {collapsible: false},\n  }),\n  target: 'map',\n  view: new View({\n    center: [373500, 436500],\n    projection: proj27700,\n    zoom: 7,\n  }),\n});\n\nconst scaleLine = new ScaleLine({bar: true, text: true, minWidth: 125});\nmap.addControl(scaleLine);\n\nconst dims = {\n  a0: [1189, 841],\n  a1: [841, 594],\n  a2: [594, 420],\n  a3: [420, 297],\n  a4: [297, 210],\n  a5: [210, 148],\n};\n\n// export options for html2canvase.\n// See: https://html2canvas.hertzen.com/configuration\nconst exportOptions = {\n  useCORS: true,\n  ignoreElements: function (element) {\n    const className = element.className || '';\n    return !(\n      className.indexOf('ol-control') === -1 ||\n      className.indexOf('ol-scale') > -1 ||\n      (className.indexOf('ol-attribution') > -1 &&\n        className.indexOf('ol-uncollapsible'))\n    );\n  },\n};\n\nconst exportButton = document.getElementById('export-pdf');\n\nexportButton.addEventListener(\n  'click',\n  function () {\n    exportButton.disabled = true;\n    document.body.style.cursor = 'progress';\n\n    const format = document.getElementById('format').value;\n    const resolution = document.getElementById('resolution').value;\n    const scale = document.getElementById('scale').value;\n    const dim = dims[format];\n    const width = Math.round((dim[0] * resolution) / 25.4);\n    const height = Math.round((dim[1] * resolution) / 25.4);\n    const viewResolution = map.getView().getResolution();\n    const scaleResolution =\n      scale /\n      getPointResolution(\n        map.getView().getProjection(),\n        resolution / 25.4,\n        map.getView().getCenter()\n      );\n\n    map.once('rendercomplete', function () {\n      exportOptions.width = width;\n      exportOptions.height = height;\n      html2canvas(map.getViewport(), exportOptions).then(function (canvas) {\n        const pdf = new jspdf.jsPDF('landscape', undefined, format);\n        pdf.addImage(\n          canvas.toDataURL('image/jpeg'),\n          'JPEG',\n          0,\n          0,\n          dim[0],\n          dim[1]\n        );\n        pdf.save('map.pdf');\n        // Reset original map size\n        scaleLine.setDpi();\n        map.getTargetElement().style.width = '';\n        map.getTargetElement().style.height = '';\n        map.updateSize();\n        map.getView().setResolution(viewResolution);\n        exportButton.disabled = false;\n        document.body.style.cursor = 'auto';\n      });\n    });\n\n    // Set print size\n    scaleLine.setDpi(resolution);\n    map.getTargetElement().style.width = width + 'px';\n    map.getTargetElement().style.height = height + 'px';\n    map.updateSize();\n    map.getView().setResolution(scaleResolution);\n  },\n  false\n);\n"],"sourceRoot":""}