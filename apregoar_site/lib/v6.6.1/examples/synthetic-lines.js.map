{"version":3,"sources":["webpack:///./synthetic-lines.js"],"names":["endPoint","delta","deltaX","deltaY","i","features","Array","startPoint","signX","signY","const","vector","source","wrapX","style","stroke","color","width","view","center","zoom","layers","target"],"mappings":"8FAYIA,EAEAC,EAAOC,EAAQC,EAKfC,E,8EAVEC,EAAW,IAAIC,MADP,KAGVC,EAAa,CAAC,EAAG,GAIjBC,EAAQ,EACRC,GAAS,EAIb,IAAKL,EAAI,EAAGA,EAZE,MAYWA,EAEnBA,EAAI,GAAM,EACZK,IAAU,EAEVD,IAAU,EAEZN,GANAD,EAAkB,MAATG,EAAI,IAMII,EACjBL,EAASF,EAAQQ,EACjBT,EAAW,CAACO,EAAW,GAAKL,EAAQK,EAAW,GAAKJ,GACpDE,EAASD,GAAK,IAAI,IAAQ,CACxB,SAAY,IAAI,IAAW,CAACG,EAAYP,MAE1CO,EAAaP,EAGfU,IAAMC,EAAS,IAAI,IAAY,CAC7BC,OAAQ,IAAI,IAAa,CACvBP,SAAUA,EACVQ,OAAO,IAETC,MAAO,IAAI,KAAM,CACfC,OAAQ,IAAI,IAAO,CACjBC,MAAO,UACPC,MAAO,QAKPC,EAAO,IAAI,KAAK,CACpBC,OAAQ,CAAC,EAAG,GACZC,KAAM,IAGI,IAAI,IAAI,CAClBC,OAAQ,CAACV,GACTW,OAAQ,MACRJ,KAAMA,M","file":"synthetic-lines.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport LineString from '../src/ol/geom/LineString.js';\nimport Map from '../src/ol/Map.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport {Stroke, Style} from '../src/ol/style.js';\n\nconst count = 10000;\nconst features = new Array(count);\n\nlet startPoint = [0, 0];\nlet endPoint;\n\nlet delta, deltaX, deltaY;\nlet signX = 1;\nlet signY = -1;\n\n// Create a square spiral.\nlet i;\nfor (i = 0; i < count; ++i) {\n  delta = (i + 1) * 2500;\n  if (i % 2 === 0) {\n    signY *= -1;\n  } else {\n    signX *= -1;\n  }\n  deltaX = delta * signX;\n  deltaY = delta * signY;\n  endPoint = [startPoint[0] + deltaX, startPoint[1] + deltaY];\n  features[i] = new Feature({\n    'geometry': new LineString([startPoint, endPoint]),\n  });\n  startPoint = endPoint;\n}\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    features: features,\n    wrapX: false,\n  }),\n  style: new Style({\n    stroke: new Stroke({\n      color: '#666666',\n      width: 1,\n    }),\n  }),\n});\n\nconst view = new View({\n  center: [0, 0],\n  zoom: 0,\n});\n\nconst map = new Map({\n  layers: [vector],\n  target: 'map',\n  view: view,\n});\n"],"sourceRoot":""}