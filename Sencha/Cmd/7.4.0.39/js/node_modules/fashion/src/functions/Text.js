"use strict";

var Fashion = require('../export/Base.js');
var Text = require('../export/type/Text.js');
var Literal = require('../export/type/Literal.js');
var Numeric = require('../export/type/Numeric.js');

module.exports = {
    init(runtime) {
        runtime.register({
            quote: function (string) {
                if (!string.$isFashionString && !string.$isFashionLiteral) {
                    Fashion.raise(string + ' is not a string or literal for \'quote\'');
                }

                return new Text(string.value);
            },

            unquote: function (string) {
                //if (!string.$isFashionString && !string.$isFashionLiteral && !string.$isFashionColor) {
                //    Fashion.raise(string + ' is not a string or literal for \'unquote\'');
                //}

                if (string.$isFashionString) {
                    return new Literal(Literal.deEscape(string.value));
                }
                return string;
            },

            str_slice: function (string, start_at, end_at) {
                if (!string.$isFashionLiteral && !string.$isFashionString) {
                    Fashion.raise(string + ' is not a string or literal for \'str-slice\'');
                }
                return string.slice(start_at, end_at);
            },

            str_length: function (string) {
                if (!string.$isFashionLiteral && !string.$isFashionString) {
                    Fashion.raise(string + ' is not a string or literal for \'str-slice\'');
                }
                return new Numeric(string.value.length);
            },

            to_upper_case: function (string) {
                if (!string.$isFashionLiteral && !string.$isFashionString) {
                    Fashion.raise(string + ' is not a string or literal for \'to-lower-case\'');
                }
                return string.toUpperCase();
            },

            to_lower_case: function (string) {
                if (!string.$isFashionLiteral && !string.$isFashionString) {
                    Fashion.raise(string + ' is not a string or literal for \'to-lower-case\'');
                }
                return string.toLowerCase();
            },

            str_index: function (string, substring) {
                if (!string.$isFashionLiteral && !string.$isFashionString) {
                    Fashion.raise(string + ' is not a string or literal for \'str-insert\'');
                }
                if (!substring.$isFashionLiteral && !substring.$isFashionString) {
                    Fashion.raise(substring + ' is not a string or literal for \'str-insert\'');
                }
                return string.indexOf(substring);
            },

            str_insert: function (string, insert, index) {
                if (!string.$isFashionLiteral && !string.$isFashionString) {
                    Fashion.raise(string + ' is not a string or literal for \'str-insert\'');
                }
                if (!insert.$isFashionLiteral && !insert.$isFashionString) {
                    Fashion.raise(insert + ' is not a string or literal for \'str-insert\'');
                }
                return string.insert(insert, index);
            }

        });
    }
}
