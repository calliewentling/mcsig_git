/*
 * Copyright (c) 2012-2016. Sencha Inc.
 */

"use strict";

var Fashion = require('../Base.js');
var Type = require('./Type.js');
var List = require('./List.js');

class FunctionCall extends Type {
    constructor(name, args) {
        super();
        this.name = name;
        if (Array.isArray(args)) {
            args = new List(args);
        }
        this.args = args;
    }

    toString() {
        var args = this.args,
            argsStr;
        if (Array.isArray(args)) {
            argsStr = args.join(', ');
        } else {
            argsStr = args.toString();
        }
        return this.name + "(" + argsStr + ')';
    }

    doVisit(visitor) {
        visitor.functioncall(this);
    }

    descend(visitor) {
        this.args && visitor.visit(this.args);
    }

    copy() {
        return new FunctionCall(this.name, this.args && this.args.copy());
    }
}

Fashion.apply(FunctionCall.prototype, {
    type: 'functioncall',
    $isFashionFunctionCall: true,
    $canUnbox: false,
    name: null,
    args: null
});

module.exports = FunctionCall;