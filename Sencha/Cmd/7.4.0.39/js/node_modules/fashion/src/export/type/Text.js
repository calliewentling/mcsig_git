/*
 * Copyright (c) 2012-2016. Sencha Inc.
 */

"use strict";

var Fashion = require('../Base.js');
var Literal = require('./Literal.js');

class Text extends Literal {
    constructor(value, quoteChar) {
        super(value);
        if (quoteChar !== undefined) {
            if (Text.preferDoubleQuotes && quoteChar === '') {
                this.quoteChar = '';
            }
            else {
                this.quoteChar = quoteChar;
            }
        }
    }

    doVisit(visitor) {
        visitor.string(this);
    }

    toString() {
        return this.quoteChar + this.value + this.quoteChar;
    }

    unquote() {
        return new Literal(this.value);
    }

    copy() {
        return new Text(this.value, this.quoteChar);
    }

    slice(start, end) {
        return new Text(super.slice(start, end).value, this.quoteChar);
    }

    toUpperCase() {
        return new Text(this.value.toUpperCase(), this.quoteChar);
    }

    toLowerCase() {
        return new Text(this.value.toLowerCase(), this.quoteChar);
    }

    insert(str, startVal) {
        return new Text(super.insert(str, startVal).value, this.quoteChar);
    }

    static tryCoerce(obj) {
        if (obj.$isFashionNumber) {
            return undefined;
        }
        if (obj.$isFashionLiteral) {
            return new Text(obj.value);
        }

        return new Text(obj.getHash());
    }
}

Text.preferDoubleQuotes = false;

Fashion.apply(Text.prototype, {
    type: 'string',
    $isFashionString: true,
    value: null,
    quoteChar: '"',

    '+' (right) {
        return new Text(this.value + right.getHash());
    },

    '+.number' (right) {
        return new Text(this.value + right.toString());
    },

    '/' (right) {
        return new Text(this.value + '/' + right.getHash());
    }
});

module.exports = Text;
